# Generated by Django 5.2.5 on 2025-08-20 12:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='StaffUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('cashier', 'Cashier'), ('waiter', 'Waiter'), ('kitchen', 'Kitchen')], max_length=20, verbose_name='Role')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Phone Number')),
                ('national_code', models.CharField(max_length=10, unique=True, verbose_name='National Code')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('failed_login_attempts', models.PositiveIntegerField(default=0, verbose_name='Failed Login Attempts')),
                ('last_failed_login', models.DateTimeField(blank=True, null=True, verbose_name='Last Failed Login')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='staffuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='staffuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Staff Member',
                'verbose_name_plural': 'Staff Members',
                'ordering': ['role', 'username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StaffLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Login to System'), ('login_failed', 'Failed Login'), ('login_reset', 'Reset Failed Attempts'), ('logout', 'Logout from System'), ('order_create', 'Create Order'), ('order_update', 'Update Order'), ('order_cancel', 'Cancel Order'), ('payment_create', 'Record Payment'), ('payment_refund', 'Refund Payment'), ('customer_create', 'Create New Customer'), ('customer_update', 'Update Customer Information'), ('report_generate', 'Generate Report'), ('other', 'Other')], max_length=20, verbose_name='Action')),
                ('details', models.TextField(verbose_name='Details')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='staff.staffuser', verbose_name='Staff Member')),
            ],
            options={
                'verbose_name': 'Staff Log',
                'verbose_name_plural': 'Staff Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report')], max_length=20, verbose_name='Report Type')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('total_orders', models.PositiveIntegerField(default=0, verbose_name='Total Orders')),
                ('total_revenue', models.DecimalField(decimal_places=0, default=0, max_digits=12, verbose_name='Total Revenue')),
                ('total_discounts', models.DecimalField(decimal_places=0, default=0, max_digits=12, verbose_name='Total Discounts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='staff.staffuser', verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'ordering': ['-created_at'],
            },
        ),
    ]
